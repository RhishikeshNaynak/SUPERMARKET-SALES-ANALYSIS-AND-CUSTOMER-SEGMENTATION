data$TotalPrice = with(data, Quantity*UnitPrice)
names(data)
data <- data %>%mutate(Description = as.factor(Description),
Country = as.character(Country),
StockCode = as.factor(StockCode))
head(data)
data <- na.omit(data)
nrow(data)
g <- ggplot(Market, aes(x = month , y = StockCode)) +
geom_bar(stat = 'identity', fill = "black") +
coord_flip() + theme_classic()+
xlab("Cities")+
ylab("Number of product sales")+
ggtitle("Entire Year sales of products according to Month")
plot(g)
runApp('F:/shiny')
g <- ggplot(Market, aes(x = month , y = Total_sales)) +
geom_bar(stat = 'identity', fill = "black") +
coord_flip() + theme_classic()+
xlab("Cities")+
ylab("Number of product sales")+
ggtitle("Entire Year sales of products according to Month")
plot(g)
runApp('F:/shiny')
res<-rquery.wordcloud(Market, type ="file", lang = "english",
min.freq = 1,  max.words = 200)
library(wordcloud)
library(wordcloud)
res<-rquery.wordcloud(Market, type ="file", lang = "english",
min.freq = 1,  max.words = 200)
install.packages("rquery.wordcloud")
res<-rquery.wordcloud(Market, type ="file", lang = "english",
min.freq = 1,  max.words = 200)
install.packages("tm", "SnowballC", "wordcloud", "RColorBrewer", "RCurl", "XML")
install.packages("SnowballC")
install.packages("tm")
install.packages("RCurl")
install.packages("XML")
library(plyr)
library(dplyr)
library(plyr)
library(ggplot2)
library(devtools)
library(tidytext)
library(plotly)
library(wordcloud)
library(SnowballC)
library(tm)
library(RColorBrewer)
library(RCurl)
library(XML)
library(plyr)
library(dplyr)
library(plyr)
library(ggplot2)
library(devtools)
library(tidytext)
library(plotly)
library(wordcloud)
library(SnowballC)
library(tm)
library(RColorBrewer)
library(RCurl)
library(XML)
res<-rquery.wordcloud(Market, type ="file", lang = "english",
min.freq = 1,  max.words = 200)
res<-rquery.wordcloud(Market, type ="file", lang = "english")
shiny::runApp('F:/shiny')
runApp()
runApp('F:/shiny')
runApp()
runApp('F:/shiny')
runApp()
runApp('F:/shiny')
runApp('F:/shiny')
runApp()
runApp('F:/shiny')
View(o_segments)
runApp('F:/shiny')
runApp('F:/shiny')
#Scree plot
wss <- (nrow(segmets_a)-1)*sum(apply(segmets_a,2,var))
#---------------------------------------------------------------------------
segments
library(rfm)
library(magrittr)
library(dplyr)
library(lubridate)
market <- read.csv('C:/Users/home/Desktop/Rhishi_project/Market_Analysis.csv')
market$Total_sales = market$Quantity * market$UnitPrice
head(market)
names(market)
market$StockCode <- NULL
market$Description <- NULL
market$Quantity <- NULL
market$UnitPrice <- NULL
market$InvoiceNo <- NULL
market$Country <- NULL
market
str(market)
#market$InvoiceDate = as.character(market$InvoiceDate, "%Y-%m-%d")
market$InvoiceDate <- mdy(market$InvoiceDate)
# InvoiceDate=as.Date(InvoiceDate, '%m/%d/%Y')
# rfm_data_orders
## ----rfm table-----------------------------------------------------------
analysis_date <- lubridate::as_date("2012-01-01", tz = "UTC")
rfm_resultt <- rfm_table_order(market, CustomerID, InvoiceDate, Total_sales, analysis_date)
rfm_resultt
## ----segments------------------------------------------------------------
segment_names <- c("Champions", "Loyal Customers", "Potential Loyalist",
"New Customers", "Promising", "Need Attention", "About To Sleep",
"At Risk", "Can't Lose Them", "Hibernating", "Lost")
recency_lower   <- c(4, 2, 3, 4, 3, 3, 2, 1, 1, 2, 1)
recency_upper   <- c(5, 4, 5, 5, 4, 4, 3, 2, 1, 3, 1)
frequency_lower <- c(4, 3, 1, 1, 1, 3, 1, 2, 4, 2, 1)
frequency_upper <- c(5, 4, 3, 1, 1, 4, 2, 5, 5, 3, 1)
monetary_lower  <- c(4, 4, 1, 1, 1, 3, 1, 2, 4, 2, 1)
monetary_upper  <- c(5, 5, 3, 1, 1, 4, 2, 5, 5, 3, 1)
segments <- rfm_segment(rfm_resultt, segment_names, recency_lower, recency_upper,
frequency_lower, frequency_upper, monetary_lower, monetary_upper)
segments
View(segments)
## ----tabulate segments---------------------------------------------------
segments %>%
dplyr::count(segment) %>%
dplyr::arrange(dplyr::desc(n)) %>%
dplyr::rename(Segment = segment, Count = n)
#---------------------------------------------------------------------------
segments
names(segments)
plot(customer_id ~ rfm_score,segments)
o_segments = segments
o_segments$customer_id <- NULL
o_segments$segment <- NULL
o_segments$date_most_recent <- NULL
segmets_a  <- scale(o_segments[-1])
results <- kmeans(segmets_a,6)
attributes(results)
results
table(segments$segment,results$cluster)
plot(segments[c("rfm_score","customer_id")],col = results$cluster )
View(Market)
shiny::runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp()
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp()
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
runApp('C:/Users/home/Desktop/Rshiny/R-Shinyapp-Tutorial-master/renderPlot')
shiny::runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
install.packages("shinyjs")
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
segments
names(segments)
#plot(rfm_score ~ customer_id,segments)
plot(customer_id ~ rfm_score,segments)
#with(segments,text(customer_id~rfm_score,label=segment))
segments
names(segments)
o_segments = segments
o_segments$customer_id <- NULL
o_segments$segment <- NULL
o_segments$date_most_recent <- NULL
names(o_segments)
kmeans2 <- kmeans(o_segments, centers = 9, nstart = 25)
fviz_cluster(kmeans, data = o_segments)
install.packages("fviz_cluster")
kmeans2 <- kmeans(o_segments, centers = 9, nstart = 25)
fviz_cluster(kmeans, data = o_segments)
fviz_Cluster(kmeans, data = o_segments)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 3, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 7, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_luster(kmeans, data = o_segments)
fviz_cluster(kmeans, data = o_segments)
install.packages("factoextra")
library(factoextra)
library(factoextra)
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_cluster(kmeans, data = o_segments)
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
kmeans2 <- kmeans(o_segments, centers = 3, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
kmeans2 <- kmeans(o_segments, centers = 7, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 8, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
kmeans2 <- kmeans(o_segments, centers = 10, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 8, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 7, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 5, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 4, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 3, nstart = 25)
kmeans2
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
runApp('F:/shiny')
View(o_segments)
plot(segments[c("rfm_score","customer_id")],col = kmeans2$cluster )
fviz_cluster(kmeans2, data = o_segments)
View(Market)
kmeans2 <- kmeans(o_segments, centers = 6, nstart = 25)
kmeans2
fviz_cluster(kmeans2, data = o_segments)
shiny::runApp('F:/shiny')
runApp('F:/shiny')
runApp()
runApp('F:/shiny')
runApp('F:/shiny')
shiny::runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 10) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(10)
library(ggplot2)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(dplyr)
library(stringr)
library(forcats)
library(methods)
library(ggplot2)
library(tibble)
library(tidyr)
library(readr)
library(purrr)
library(dplyr)
library(stringr)
library(forcats)
library(methods)
Market <- read.csv("C:/Users/home/Desktop/Rhishi_project/Market_Analysis.csv")
Market <- Market %>%mutate(
Description = as.character(Description),
Country = as.character(Country),
CustomerID = as.factor(CustomerID)
#StockCode = as.factor(StockCode)
)
Market$Total_sales = Market$Quantity * Market$UnitPrice
names(Market)
str(Market)
Market %>% is.na %>% colSums
Market$InvoiceDate = as.character(Market$InvoiceDate, "%Y-%m-%d")
str(Market)
Market$InvoiceDate <- mdy(Market$InvoiceDate)
Market$date <- format(Market$InvoiceDate, "%m/%d/%Y")
Market$month <- format(Market$InvoiceDate, "%B")
Market$week <- format(Market$InvoiceDate, "%A")
Market %>% is.na %>% colSums
head(Market)
names(Market)
str(Market)
shiny::runApp('F:/shiny')
Market <- read.csv("C:/Users/home/Desktop/Rhishi_project/Market_Analysis.csv")
Market <- Market %>%mutate(
Description = as.character(Description),
Country = as.character(Country),
CustomerID = as.factor(CustomerID)
#StockCode = as.factor(StockCode)
)
Market$Total_sales = Market$Quantity * Market$UnitPrice
names(Market)
str(Market)
Market %>% is.na %>% colSums
Market$InvoiceDate = as.character(Market$InvoiceDate, "%Y-%m-%d")
str(Market)
Market$InvoiceDate <- mdy(Market$InvoiceDate)
Market$date <- format(Market$InvoiceDate, "%m/%d/%Y")
Market$month <- format(Market$InvoiceDate, "%B")
Market$week <- format(Market$InvoiceDate, "%A")
Market %>% is.na %>% colSums
head(Market)
names(Market)
str(Market)
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 10) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(10)
head(customer,10)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
ggplot(data=Market, aes(x=StockCode, y=Total_sales, group=week)) +
geom_line(linetype="dashed")+
geom_point()
ggplot(Market, aes(x=StockCode, y=Total_sales, group=week)) +
geom_line(aes(linetype=week, color=week, size=week))+
geom_point()+
scale_linetype_manual(values=c("twodash", "dotted","solid","twodash", "dotted","solid"))+
scale_color_manual(values=c('#999999','#E69F00','#999999','#E69F00','#999999','#E69F00'))+
scale_size_manual(values=c(1, 1.5, 1, 1.5, 1, 1.5))+
theme(legend.position="top")
df2 <- data.frame(week = rep(c(Market$week)),
StockCode=c(Market$StockCode),
Total_sales=c(Market$Total_sales))
head(df2)
ggplot(data=df2, aes(x=StockCode, y=Total_sales, group=week)) +
geom_line()+
geom_point()
df2 <- data.frame(week = rep(c(Market$week)),
week=c(Market$week),
Total_sales=c(Market$Total_sales))
head(df2)
ggplot(data=df2, aes(x=week, y=Total_sales, group=week)) +
geom_line()+
geom_point()
ggplot(data=df2, aes(x=week, y=Total_sales, group=week)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
df2 <- data.frame(week = rep(c(Market$week)),
week=c(Market$week),
Total_sales=c(Market$Total_sales))
head(df2)
View(data)
View(df2)
customerr <- Market %>%
select(week, Total_sales)%>%
group_by(week, Total_sales) %>%
distinct(customer) %>%
head(customerr)
customerr <- Market %>%
select(week, Total_sales)%>%
group_by(week, Total_sales) %>%
distinct(customer) %>%
head(customerr)
customerr <- Market %>%
select(week, Total_sales)%>%
group_by(week, Total_sales) %>%
distinct(customerr) %>%
head(customerr)
customerr <- Market %>%
select(week, Total_sales)%>%
group_by(week, Total_sales) %>%
distinct(customerr) %>%
head(customerr)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=2)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 20) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(20)
head(customer,20)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=2)+
geom_point()
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=2)+
geom_point()
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 20) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(20)
head(customer,20)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 15) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(15)
head(customer,15)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1))
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 10) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(10)
head(customer,10)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 20) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(20)
head(customer,20)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
customer <- Market %>%
select(CustomerID, StockCode, Total_sales)%>%
group_by(CustomerID, StockCode, Total_sales) %>%
filter(rank(desc(Total_sales)) <= 10) %>%
arrange(desc(Total_sales)) %>%
distinct(customer) %>%
head(10)
head(customer,10)
ggplot(data=customer, aes(x=CustomerID, y=Total_sales, group=1)) +
geom_line(linetype = "dashed",color="purple", size=1)+
geom_point()
library("tm")
library("tm")
readinteger <- function(){
n <- readline(prompt = "enter the value of k-1: ")
k <- as.integer(n)
u1 <- readLines("C:/Users/home/Desktop/abc.txt")
shingle <- 0
i <- 0
while(i < nchar(u1) - (k + 1)){
shingle[i] <- substr(u1,start = i,stop = i + k)
print(shingle[i])
i <- i + 1
}
}
z<- readinteger()
library("tm")
readinteger <- function(){
n <- readline(prompt = "Enter the value of k-1: ")
k <- as.integer(n)
u1 <- readLines("C:/Users/home/Desktop/abc.txt")
shingle <- 0
i <- 0
while(i < nchar(u1) - (k + 1)){
shingle[i] <- substr(u1,start = i,stop = i + k)
print(shingle[i])
i = i + 1
}
}
a <- readinteger()
library("tm")
my.corpus <- Corpus(DirSource("C:/Users/home/Desktop/bid"))
my.corpus <- tm_map(my.corpus,removeWords,stopwords("English"))
my.tdm <- TermDocumentMatrix(my.corpus)
my.dtm <- DocumentTermMatrix(my.corpus,control = list(Weighting = weightTfIdf,stopwords = TRUE))
my.df <- as.data.frame(my.tdm)
my.df <- as.data.frame(inspect(my.tdm))
my.df.scale <- scale(my.df)
d <- dist(my.df.scale,method = "euclidean")
fit <- hclust(d,method = "ward")
plot(fit)
library("tm")
my.corpus <- Corpus(DirSource("C:/Users/home/Desktop/bid"))
my.corpus <- tm_map(my.corpus,removeWords,stopwords("English"))
my.tdm <- TermDocumentMatrix(my.corpus)
my.dtm <- DocumentTermMatrix(my.corpus,control = list(Weighting = weightTfIdf,stopwords = TRUE))
my.df <- as.data.frame(inspect(my.tdm))
my.df.scale <- scale(my.df)
d <- dist(my.df.scale,method = "euclidean")
fit <- hclust(d,method = "ward.D")
plot(fit)
shiny::runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
runApp('F:/shiny')
shiny::runApp('F:/shiny')
